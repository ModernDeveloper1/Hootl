/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HOOTLES, HOOTLESInterface } from "../HOOTLES";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hiddenMetadataUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAmountPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "mintForAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftPerAddressLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
    ],
    name: "setCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    name: "setHiddenMetadataUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
    ],
    name: "setMaxMintAmountPerTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "setNftPerAddressLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setRevealed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriPrefix",
        type: "string",
      },
    ],
    name: "setUriPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriSuffix",
        type: "string",
      },
    ],
    name: "setUriSuffix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setWhitelistException",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setWhitelistMintEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriPrefix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriSuffix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistException",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040819052600060808190526200001b91600d9162000262565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91600e9162000262565b5060026013556014805462ffffff191660011790553480156200006c57600080fd5b50604051620031f1380380620031f18339810160408190526200008f91620003d5565b855186908690620000a890600290602085019062000262565b508051620000be90600390602084019062000262565b5050600160005550620000d13362000108565b6001600955620000e1846200015a565b6011839055620000f182620001ae565b620000fc81620001fe565b505050505050620004bf565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6008546001600160a01b03163314620001a95760405162461bcd60e51b81526020600482018190526024820152600080516020620031d183398151915260448201526064015b60405180910390fd5b601055565b6008546001600160a01b03163314620001f95760405162461bcd60e51b81526020600482018190526024820152600080516020620031d18339815191526044820152606401620001a0565b601255565b6008546001600160a01b03163314620002495760405162461bcd60e51b81526020600482018190526024820152600080516020620031d18339815191526044820152606401620001a0565b80516200025e90600f90602084019062000262565b5050565b828054620002709062000482565b90600052602060002090601f016020900481019282620002945760008555620002df565b82601f10620002af57805160ff1916838001178555620002df565b82800160010185558215620002df579182015b82811115620002df578251825591602001919060010190620002c2565b50620002ed929150620002f1565b5090565b5b80821115620002ed5760008155600101620002f2565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200033057600080fd5b81516001600160401b03808211156200034d576200034d62000308565b604051601f8301601f19908116603f0116810190828211818310171562000378576200037862000308565b816040528381526020925086838588010111156200039557600080fd5b600091505b83821015620003b957858201830151818301840152908201906200039a565b83821115620003cb5760008385830101525b9695505050505050565b60008060008060008060c08789031215620003ef57600080fd5b86516001600160401b03808211156200040757600080fd5b620004158a838b016200031e565b975060208901519150808211156200042c57600080fd5b6200043a8a838b016200031e565b965060408901519550606089015194506080890151935060a08901519150808211156200046657600080fd5b506200047589828a016200031e565b9150509295509295509295565b600181811c908216806200049757607f821691505b60208210811415620004b957634e487b7160e01b600052602260045260246000fd5b50919050565b612d0280620004cf6000396000f3fe6080604052600436106102ae5760003560e01c8063715018a611610175578063b767a098116100dc578063d2cab05611610095578063e0a808531161006f578063e0a8085314610840578063e985e9c514610860578063efbd73f414610880578063f2fde38b146108a057600080fd5b8063d2cab056146107e7578063d5abeb01146107fa578063db4bec441461081057600080fd5b8063b767a09814610724578063b88d4fde14610744578063ba7d2c7614610764578063c23dc68f1461077a578063c87b56dd146107a7578063d0eb26b0146107c757600080fd5b806395d89b411161012e57806395d89b411461068757806399a2557a1461069c578063a0712d68146106bc578063a22cb465146106cf578063a45ba8e7146106ef578063b071401b1461070457600080fd5b8063715018a6146105d15780637cb64759146105e65780637ec4a659146106065780638462151c146106265780638da5cb5b1461065357806394354fd01461067157600080fd5b806342842e0e116102195780635bbb2177116101d25780635bbb2177146105165780635c975abb1461054357806362b99ad41461055d5780636352211e146105725780636caede3d1461059257806370a08231146105b157600080fd5b806342842e0e1461046157806343f4251d1461048157806344a0d68a146104a15780634fdd43cb146104c157806351830227146104e15780635503a0e81461050157600080fd5b806316ba10e01161026b57806316ba10e0146103b857806316c38b3c146103d857806318160ddd146103f857806323b872dd146104165780632eb4a7ab146104365780633ccfd60b1461044c57600080fd5b806301ffc9a7146102b357806306fdde03146102e8578063076fb8be1461030a578063081812fc1461033a578063095ea7b31461037257806313faede614610394575b600080fd5b3480156102bf57600080fd5b506102d36102ce366004612499565b6108c0565b60405190151581526020015b60405180910390f35b3480156102f457600080fd5b506102fd610912565b6040516102df919061250e565b34801561031657600080fd5b506102d361032536600461253d565b600c6020526000908152604090205460ff1681565b34801561034657600080fd5b5061035a610355366004612558565b6109a4565b6040516001600160a01b0390911681526020016102df565b34801561037e57600080fd5b5061039261038d366004612571565b6109e8565b005b3480156103a057600080fd5b506103aa60105481565b6040519081526020016102df565b3480156103c457600080fd5b506103926103d3366004612638565b610a6f565b3480156103e457600080fd5b506103926103f3366004612690565b610ab9565b34801561040457600080fd5b506103aa600154600054036000190190565b34801561042257600080fd5b506103926104313660046126ab565b610af6565b34801561044257600080fd5b506103aa600a5481565b34801561045857600080fd5b50610392610b01565b34801561046d57600080fd5b5061039261047c3660046126ab565b610bfc565b34801561048d57600080fd5b5061039261049c36600461253d565b610c17565b3480156104ad57600080fd5b506103926104bc366004612558565b610c65565b3480156104cd57600080fd5b506103926104dc366004612638565b610c94565b3480156104ed57600080fd5b506014546102d39062010000900460ff1681565b34801561050d57600080fd5b506102fd610cd1565b34801561052257600080fd5b506105366105313660046126e7565b610d5f565b6040516102df919061278c565b34801561054f57600080fd5b506014546102d39060ff1681565b34801561056957600080fd5b506102fd610e25565b34801561057e57600080fd5b5061035a61058d366004612558565b610e32565b34801561059e57600080fd5b506014546102d390610100900460ff1681565b3480156105bd57600080fd5b506103aa6105cc36600461253d565b610e44565b3480156105dd57600080fd5b50610392610e92565b3480156105f257600080fd5b50610392610601366004612558565b610ec8565b34801561061257600080fd5b50610392610621366004612638565b610ef7565b34801561063257600080fd5b5061064661064136600461253d565b610f34565b6040516102df91906127f6565b34801561065f57600080fd5b506008546001600160a01b031661035a565b34801561067d57600080fd5b506103aa60125481565b34801561069357600080fd5b506102fd611081565b3480156106a857600080fd5b506106466106b736600461282e565b611090565b6103926106ca366004612558565b611256565b3480156106db57600080fd5b506103926106ea366004612861565b611394565b3480156106fb57600080fd5b506102fd61142a565b34801561071057600080fd5b5061039261071f366004612558565b611437565b34801561073057600080fd5b5061039261073f366004612690565b611466565b34801561075057600080fd5b5061039261075f366004612894565b6114aa565b34801561077057600080fd5b506103aa60135481565b34801561078657600080fd5b5061079a610795366004612558565b6114ee565b6040516102df919061290f565b3480156107b357600080fd5b506102fd6107c2366004612558565b6115a8565b3480156107d357600080fd5b506103926107e2366004612558565b611717565b6103926107f5366004612944565b611746565b34801561080657600080fd5b506103aa60115481565b34801561081c57600080fd5b506102d361082b36600461253d565b600b6020526000908152604090205460ff1681565b34801561084c57600080fd5b5061039261085b366004612690565b6119e1565b34801561086c57600080fd5b506102d361087b3660046129c2565b611a27565b34801561088c57600080fd5b5061039261089b3660046129ec565b611a55565b3480156108ac57600080fd5b506103926108bb36600461253d565b611af5565b60006001600160e01b031982166380ac58cd60e01b14806108f157506001600160e01b03198216635b5e139f60e01b145b8061090c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461092190612a0f565b80601f016020809104026020016040519081016040528092919081815260200182805461094d90612a0f565b801561099a5780601f1061096f5761010080835404028352916020019161099a565b820191906000526020600020905b81548152906001019060200180831161097d57829003601f168201915b5050505050905090565b60006109af82611b90565b6109cc576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006109f382610e32565b9050806001600160a01b0316836001600160a01b03161415610a285760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614610a5f57610a428133611a27565b610a5f576040516367d9dca160e11b815260040160405180910390fd5b610a6a838383611bc9565b505050565b6008546001600160a01b03163314610aa25760405162461bcd60e51b8152600401610a9990612a4a565b60405180910390fd5b8051610ab590600e9060208401906123ea565b5050565b6008546001600160a01b03163314610ae35760405162461bcd60e51b8152600401610a9990612a4a565b6014805460ff1916911515919091179055565b610a6a838383611c25565b6008546001600160a01b03163314610b2b5760405162461bcd60e51b8152600401610a9990612a4a565b60026009541415610b7e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a99565b60026009556000610b976008546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610be1576040519150601f19603f3d011682016040523d82523d6000602084013e610be6565b606091505b5050905080610bf457600080fd5b506001600955565b610a6a838383604051806020016040528060008152506114aa565b6008546001600160a01b03163314610c415760405162461bcd60e51b8152600401610a9990612a4a565b6001600160a01b03166000908152600c60205260409020805460ff19166001179055565b6008546001600160a01b03163314610c8f5760405162461bcd60e51b8152600401610a9990612a4a565b601055565b6008546001600160a01b03163314610cbe5760405162461bcd60e51b8152600401610a9990612a4a565b8051610ab590600f9060208401906123ea565b600e8054610cde90612a0f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d0a90612a0f565b8015610d575780601f10610d2c57610100808354040283529160200191610d57565b820191906000526020600020905b815481529060010190602001808311610d3a57829003601f168201915b505050505081565b80516060906000816001600160401b03811115610d7e57610d7e61259b565b604051908082528060200260200182016040528015610dc957816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610d9c5790505b50905060005b828114610e1d57610df8858281518110610deb57610deb612a7f565b60200260200101516114ee565b828281518110610e0a57610e0a612a7f565b6020908102919091010152600101610dcf565b509392505050565b600d8054610cde90612a0f565b6000610e3d82611e12565b5192915050565b60006001600160a01b038216610e6d576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b6008546001600160a01b03163314610ebc5760405162461bcd60e51b8152600401610a9990612a4a565b610ec66000611f34565b565b6008546001600160a01b03163314610ef25760405162461bcd60e51b8152600401610a9990612a4a565b600a55565b6008546001600160a01b03163314610f215760405162461bcd60e51b8152600401610a9990612a4a565b8051610ab590600d9060208401906123ea565b60606000806000610f4485610e44565b90506000816001600160401b03811115610f6057610f6061259b565b604051908082528060200260200182016040528015610f89578160200160208202803683370190505b509050610faf604080516060810182526000808252602082018190529181019190915290565b60015b83861461107557600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161580159282019290925292506110185761106d565b81516001600160a01b03161561102d57815194505b876001600160a01b0316856001600160a01b0316141561106d578083878060010198508151811061106057611060612a7f565b6020026020010181815250505b600101610fb2565b50909695505050505050565b60606003805461092190612a0f565b60608183106110b257604051631960ccad60e11b815260040160405180910390fd5b6000805460018510156110c457600194505b808411156110d0578093505b60006110db87610e44565b9050848610156110fa57858503818110156110f4578091505b506110fe565b5060005b6000816001600160401b038111156111185761111861259b565b604051908082528060200260200182016040528015611141578160200160208202803683370190505b5090508161115457935061124f92505050565b600061115f886114ee565b905060008160400151611170575080515b885b8881141580156111825750848714155b1561124357600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161580159282019290925293506111e65761123b565b82516001600160a01b0316156111fb57825191505b8a6001600160a01b0316826001600160a01b0316141561123b578084888060010199508151811061122e5761122e612a7f565b6020026020010181815250505b600101611172565b50505092835250909150505b9392505050565b8060008111801561126957506012548111155b6112855760405162461bcd60e51b8152600401610a9990612a95565b6011548161129a600154600054036000190190565b6112a49190612ad9565b11156112c25760405162461bcd60e51b8152600401610a9990612af1565b81806010546112d19190612b1f565b3410156113165760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610a99565b60145460ff16156113695760405162461bcd60e51b815260206004820152601760248201527f54686520636f6e747261637420697320706175736564210000000000000000006044820152606401610a99565b600061137433610e44565b9050601354811061138457600080fd5b61138e3385611f86565b50505050565b6001600160a01b0382163314156113be5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600f8054610cde90612a0f565b6008546001600160a01b031633146114615760405162461bcd60e51b8152600401610a9990612a4a565b601255565b6008546001600160a01b031633146114905760405162461bcd60e51b8152600401610a9990612a4a565b601480549115156101000261ff0019909216919091179055565b6114b5848484611c25565b6001600160a01b0383163b1561138e576114d184848484611fa0565b61138e576040516368d2bf6b60e11b815260040160405180910390fd5b6040805160608082018352600080835260208084018290528385018290528451928301855281835282018190529281019290925290600183108061153457506000548310155b1561153f5792915050565b50600082815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16158015928201929092529061159f5792915050565b61124f83611e12565b60606115b382611b90565b6116175760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610a99565b60145462010000900460ff166116b957600f805461163490612a0f565b80601f016020809104026020016040519081016040528092919081815260200182805461166090612a0f565b80156116ad5780601f10611682576101008083540402835291602001916116ad565b820191906000526020600020905b81548152906001019060200180831161169057829003601f168201915b50505050509050919050565b60006116c3612098565b905060008151116116e3576040518060200160405280600081525061124f565b806116ed846120a7565b600e60405160200161170193929190612b3e565b6040516020818303038152906040529392505050565b6008546001600160a01b031633146117415760405162461bcd60e51b8152600401610a9990612a4a565b601355565b8260008111801561175957506012548111155b6117755760405162461bcd60e51b8152600401610a9990612a95565b6011548161178a600154600054036000190190565b6117949190612ad9565b11156117b25760405162461bcd60e51b8152600401610a9990612af1565b83806010546117c19190612b1f565b3410156118065760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610a99565b601454610100900460ff166118685760405162461bcd60e51b815260206004820152602260248201527f5468652077686974656c6973742073616c65206973206e6f7420656e61626c65604482015261642160f01b6064820152608401610a99565b336000908152600c602052604090205460ff16806118965750336000908152600b602052604090205460ff16155b6118e25760405162461bcd60e51b815260206004820152601860248201527f4164647265737320616c726561647920636c61696d65642100000000000000006044820152606401610a99565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061195c85858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600a5491508490506121a4565b6119995760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642070726f6f662160901b6044820152606401610a99565b60006119a433610e44565b905060135481106119b457600080fd5b336000818152600b60205260409020805460ff191660011790556119d89088611f86565b50505050505050565b6008546001600160a01b03163314611a0b5760405162461bcd60e51b8152600401610a9990612a4a565b60148054911515620100000262ff000019909216919091179055565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b81600081118015611a6857506012548111155b611a845760405162461bcd60e51b8152600401610a9990612a95565b60115481611a99600154600054036000190190565b611aa39190612ad9565b1115611ac15760405162461bcd60e51b8152600401610a9990612af1565b6008546001600160a01b03163314611aeb5760405162461bcd60e51b8152600401610a9990612a4a565b610a6a8284611f86565b6008546001600160a01b03163314611b1f5760405162461bcd60e51b8152600401610a9990612a4a565b6001600160a01b038116611b845760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a99565b611b8d81611f34565b50565b600081600111158015611ba4575060005482105b801561090c575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611c3082611e12565b9050836001600160a01b031681600001516001600160a01b031614611c675760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611c855750611c858533611a27565b80611ca0575033611c95846109a4565b6001600160a01b0316145b905080611cc057604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611ce757604051633a954ecd60e21b815260040160405180910390fd5b611cf360008487611bc9565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611dc7576000548214611dc757805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b60408051606081018252600080825260208201819052918101919091528180600111611f1b57600054811015611f1b57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290611f195780516001600160a01b031615611eb0579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215611f14579392505050565b611eb0565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610ab58282604051806020016040528060008152506121ba565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611fd5903390899088908890600401612c02565b602060405180830381600087803b158015611fef57600080fd5b505af192505050801561201f575060408051601f3d908101601f1916820190925261201c91810190612c3f565b60015b61207a573d80801561204d576040519150601f19603f3d011682016040523d82523d6000602084013e612052565b606091505b508051612072576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600d805461092190612a0f565b6060816120cb5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156120f557806120df81612c5c565b91506120ee9050600a83612c8d565b91506120cf565b6000816001600160401b0381111561210f5761210f61259b565b6040519080825280601f01601f191660200182016040528015612139576020820181803683370190505b5090505b84156120905761214e600183612ca1565b915061215b600a86612cb8565b612166906030612ad9565b60f81b81838151811061217b5761217b612a7f565b60200101906001600160f81b031916908160001a90535061219d600a86612c8d565b945061213d565b6000826121b1858461237e565b14949350505050565b6000546001600160a01b0384166121e357604051622e076360e81b815260040160405180910390fd5b826122015760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b15612329575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46122f26000878480600101955087611fa0565b61230f576040516368d2bf6b60e11b815260040160405180910390fd5b8082106122a757826000541461232457600080fd5b61236e565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821061232a575b50600090815561138e9085838684565b600081815b8451811015610e1d5760008582815181106123a0576123a0612a7f565b602002602001015190508083116123c657600083815260208290526040902092506123d7565b600081815260208490526040902092505b50806123e281612c5c565b915050612383565b8280546123f690612a0f565b90600052602060002090601f016020900481019282612418576000855561245e565b82601f1061243157805160ff191683800117855561245e565b8280016001018555821561245e579182015b8281111561245e578251825591602001919060010190612443565b5061246a92915061246e565b5090565b5b8082111561246a576000815560010161246f565b6001600160e01b031981168114611b8d57600080fd5b6000602082840312156124ab57600080fd5b813561124f81612483565b60005b838110156124d15781810151838201526020016124b9565b8381111561138e5750506000910152565b600081518084526124fa8160208601602086016124b6565b601f01601f19169290920160200192915050565b60208152600061124f60208301846124e2565b80356001600160a01b038116811461253857600080fd5b919050565b60006020828403121561254f57600080fd5b61124f82612521565b60006020828403121561256a57600080fd5b5035919050565b6000806040838503121561258457600080fd5b61258d83612521565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156125d9576125d961259b565b604052919050565b60006001600160401b038311156125fa576125fa61259b565b61260d601f8401601f19166020016125b1565b905082815283838301111561262157600080fd5b828260208301376000602084830101529392505050565b60006020828403121561264a57600080fd5b81356001600160401b0381111561266057600080fd5b8201601f8101841361267157600080fd5b612090848235602084016125e1565b8035801515811461253857600080fd5b6000602082840312156126a257600080fd5b61124f82612680565b6000806000606084860312156126c057600080fd5b6126c984612521565b92506126d760208501612521565b9150604084013590509250925092565b600060208083850312156126fa57600080fd5b82356001600160401b038082111561271157600080fd5b818501915085601f83011261272557600080fd5b8135818111156127375761273761259b565b8060051b91506127488483016125b1565b818152918301840191848101908884111561276257600080fd5b938501935b8385101561278057843582529385019390850190612767565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611075576127e383855180516001600160a01b031682526020808201516001600160401b0316908301526040908101511515910152565b92840192606092909201916001016127a8565b6020808252825182820181905260009190848201906040850190845b8181101561107557835183529284019291840191600101612812565b60008060006060848603121561284357600080fd5b61284c84612521565b95602085013595506040909401359392505050565b6000806040838503121561287457600080fd5b61287d83612521565b915061288b60208401612680565b90509250929050565b600080600080608085870312156128aa57600080fd5b6128b385612521565b93506128c160208601612521565b92506040850135915060608501356001600160401b038111156128e357600080fd5b8501601f810187136128f457600080fd5b612903878235602084016125e1565b91505092959194509250565b81516001600160a01b031681526020808301516001600160401b0316908201526040808301511515908201526060810161090c565b60008060006040848603121561295957600080fd5b8335925060208401356001600160401b038082111561297757600080fd5b818601915086601f83011261298b57600080fd5b81358181111561299a57600080fd5b8760208260051b85010111156129af57600080fd5b6020830194508093505050509250925092565b600080604083850312156129d557600080fd5b6129de83612521565b915061288b60208401612521565b600080604083850312156129ff57600080fd5b8235915061288b60208401612521565b600181811c90821680612a2357607f821691505b60208210811415612a4457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b602080825260149082015273496e76616c6964206d696e7420616d6f756e742160601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115612aec57612aec612ac3565b500190565b6020808252601490820152734d617820737570706c792065786365656465642160601b604082015260600190565b6000816000190483118215151615612b3957612b39612ac3565b500290565b600084516020612b518285838a016124b6565b855191840191612b648184848a016124b6565b8554920191600090600181811c9080831680612b8157607f831692505b858310811415612b9f57634e487b7160e01b85526022600452602485fd5b808015612bb35760018114612bc457612bf1565b60ff19851688528388019550612bf1565b60008b81526020902060005b85811015612be95781548a820152908401908801612bd0565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612c35908301846124e2565b9695505050505050565b600060208284031215612c5157600080fd5b815161124f81612483565b6000600019821415612c7057612c70612ac3565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082612c9c57612c9c612c77565b500490565b600082821015612cb357612cb3612ac3565b500390565b600082612cc757612cc7612c77565b50069056fea2646970667358221220793d774dd370b602a23191e923ad1bb99e7708742cc9c6f7aae22d3258cf5b4964736f6c634300080900334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

export class HOOTLES__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HOOTLES> {
    return super.deploy(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    ) as Promise<HOOTLES>;
  }
  getDeployTransaction(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    );
  }
  attach(address: string): HOOTLES {
    return super.attach(address) as HOOTLES;
  }
  connect(signer: Signer): HOOTLES__factory {
    return super.connect(signer) as HOOTLES__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HOOTLESInterface {
    return new utils.Interface(_abi) as HOOTLESInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HOOTLES {
    return new Contract(address, _abi, signerOrProvider) as HOOTLES;
  }
}
