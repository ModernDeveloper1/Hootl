/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { YesMan, YesManInterface } from "../YesMan";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_addresses",
        type: "address[]",
      },
    ],
    name: "airdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hiddenMetadataUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAmountPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "mintForAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftPerAddressLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
    ],
    name: "setCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    name: "setHiddenMetadataUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
    ],
    name: "setMaxMintAmountPerTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "setNftPerAddressLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setRevealed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriPrefix",
        type: "string",
      },
    ],
    name: "setUriPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriSuffix",
        type: "string",
      },
    ],
    name: "setUriSuffix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setWhitelistMintEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriPrefix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriSuffix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040819052600060808190526200001b91600c9162000262565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91600d9162000262565b5060026012556013805462ffffff191660011790553480156200006c57600080fd5b5060405162003262380380620032628339810160408190526200008f91620003d5565b855186908690620000a890600290602085019062000262565b508051620000be90600390602084019062000262565b5050600160005550620000d13362000108565b6001600955620000e1846200015a565b6010839055620000f182620001ae565b620000fc81620001fe565b505050505050620004bf565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6008546001600160a01b03163314620001a95760405162461bcd60e51b815260206004820181905260248201526000805160206200324283398151915260448201526064015b60405180910390fd5b600f55565b6008546001600160a01b03163314620001f95760405162461bcd60e51b81526020600482018190526024820152600080516020620032428339815191526044820152606401620001a0565b601155565b6008546001600160a01b03163314620002495760405162461bcd60e51b81526020600482018190526024820152600080516020620032428339815191526044820152606401620001a0565b80516200025e90600e90602084019062000262565b5050565b828054620002709062000482565b90600052602060002090601f016020900481019282620002945760008555620002df565b82601f10620002af57805160ff1916838001178555620002df565b82800160010185558215620002df579182015b82811115620002df578251825591602001919060010190620002c2565b50620002ed929150620002f1565b5090565b5b80821115620002ed5760008155600101620002f2565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200033057600080fd5b81516001600160401b03808211156200034d576200034d62000308565b604051601f8301601f19908116603f0116810190828211818310171562000378576200037862000308565b816040528381526020925086838588010111156200039557600080fd5b600091505b83821015620003b957858201830151818301840152908201906200039a565b83821115620003cb5760008385830101525b9695505050505050565b60008060008060008060c08789031215620003ef57600080fd5b86516001600160401b03808211156200040757600080fd5b620004158a838b016200031e565b975060208901519150808211156200042c57600080fd5b6200043a8a838b016200031e565b965060408901519550606089015194506080890151935060a08901519150808211156200046657600080fd5b506200047589828a016200031e565b9150509295509295509295565b600181811c908216806200049757607f821691505b60208210811415620004b957634e487b7160e01b600052602260045260246000fd5b50919050565b612d7380620004cf6000396000f3fe6080604052600436106102935760003560e01c80637cb647591161015a578063b88d4fde116100c1578063d5abeb011161007a578063d5abeb01146107a6578063db4bec44146107bc578063e0a80853146107ec578063e985e9c51461080c578063efbd73f41461082c578063f2fde38b1461084c57600080fd5b8063b88d4fde146106f0578063ba7d2c7614610710578063c23dc68f14610726578063c87b56dd14610753578063d0eb26b014610773578063d2cab0561461079357600080fd5b806399a2557a1161011357806399a2557a14610648578063a0712d6814610668578063a22cb4651461067b578063a45ba8e71461069b578063b071401b146106b0578063b767a098146106d057600080fd5b80637cb64759146105925780637ec4a659146105b25780638462151c146105d25780638da5cb5b146105ff57806394354fd01461061d57806395d89b411461063357600080fd5b806344a0d68a116101fe57806362b99ad4116101b757806362b99ad4146104e95780636352211e146104fe5780636caede3d1461051e57806370a082311461053d578063715018a61461055d578063729ad39e1461057257600080fd5b806344a0d68a1461042d5780634fdd43cb1461044d578063518302271461046d5780635503a0e81461048d5780635bbb2177146104a25780635c975abb146104cf57600080fd5b806316c38b3c1161025057806316c38b3c1461038d57806318160ddd146103ad57806323b872dd146103c25780632eb4a7ab146103e25780633ccfd60b146103f857806342842e0e1461040d57600080fd5b806301ffc9a71461029857806306fdde03146102cd578063081812fc146102ef578063095ea7b31461032757806313faede61461034957806316ba10e01461036d575b600080fd5b3480156102a457600080fd5b506102b86102b336600461244b565b61086c565b60405190151581526020015b60405180910390f35b3480156102d957600080fd5b506102e26108be565b6040516102c491906124c0565b3480156102fb57600080fd5b5061030f61030a3660046124d3565b610950565b6040516001600160a01b0390911681526020016102c4565b34801561033357600080fd5b50610347610342366004612508565b610994565b005b34801561035557600080fd5b5061035f600f5481565b6040519081526020016102c4565b34801561037957600080fd5b506103476103883660046125cf565b610a1b565b34801561039957600080fd5b506103476103a8366004612627565b610a65565b3480156103b957600080fd5b5061035f610aa2565b3480156103ce57600080fd5b506103476103dd366004612642565b610ab0565b3480156103ee57600080fd5b5061035f600a5481565b34801561040457600080fd5b50610347610abb565b34801561041957600080fd5b50610347610428366004612642565b610bb6565b34801561043957600080fd5b506103476104483660046124d3565b610bd1565b34801561045957600080fd5b506103476104683660046125cf565b610c00565b34801561047957600080fd5b506013546102b89062010000900460ff1681565b34801561049957600080fd5b506102e2610c3d565b3480156104ae57600080fd5b506104c26104bd3660046126a1565b610ccb565b6040516102c49190612736565b3480156104db57600080fd5b506013546102b89060ff1681565b3480156104f557600080fd5b506102e2610d91565b34801561050a57600080fd5b5061030f6105193660046124d3565b610d9e565b34801561052a57600080fd5b506013546102b890610100900460ff1681565b34801561054957600080fd5b5061035f6105583660046127a0565b610db0565b34801561056957600080fd5b50610347610dfe565b34801561057e57600080fd5b5061034761058d3660046127bb565b610e34565b34801561059e57600080fd5b506103476105ad3660046124d3565b610eca565b3480156105be57600080fd5b506103476105cd3660046125cf565b610ef9565b3480156105de57600080fd5b506105f26105ed3660046127a0565b610f36565b6040516102c49190612847565b34801561060b57600080fd5b506008546001600160a01b031661030f565b34801561062957600080fd5b5061035f60115481565b34801561063f57600080fd5b506102e2611083565b34801561065457600080fd5b506105f261066336600461287f565b611092565b6103476106763660046124d3565b611258565b34801561068757600080fd5b506103476106963660046128b2565b61136c565b3480156106a757600080fd5b506102e2611402565b3480156106bc57600080fd5b506103476106cb3660046124d3565b61140f565b3480156106dc57600080fd5b506103476106eb366004612627565b61143e565b3480156106fc57600080fd5b5061034761070b3660046128e5565b611482565b34801561071c57600080fd5b5061035f60125481565b34801561073257600080fd5b506107466107413660046124d3565b6114cc565b6040516102c49190612960565b34801561075f57600080fd5b506102e261076e3660046124d3565b611586565b34801561077f57600080fd5b5061034761078e3660046124d3565b6116f5565b6103476107a1366004612995565b611724565b3480156107b257600080fd5b5061035f60105481565b3480156107c857600080fd5b506102b86107d73660046127a0565b600b6020526000908152604090205460ff1681565b3480156107f857600080fd5b50610347610807366004612627565b61199c565b34801561081857600080fd5b506102b8610827366004612a13565b6119e2565b34801561083857600080fd5b50610347610847366004612a3d565b611a10565b34801561085857600080fd5b506103476108673660046127a0565b611aa7565b60006001600160e01b031982166380ac58cd60e01b148061089d57506001600160e01b03198216635b5e139f60e01b145b806108b857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546108cd90612a60565b80601f01602080910402602001604051908101604052809291908181526020018280546108f990612a60565b80156109465780601f1061091b57610100808354040283529160200191610946565b820191906000526020600020905b81548152906001019060200180831161092957829003601f168201915b5050505050905090565b600061095b82611b42565b610978576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061099f82610d9e565b9050806001600160a01b0316836001600160a01b031614156109d45760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614610a0b576109ee81336119e2565b610a0b576040516367d9dca160e11b815260040160405180910390fd5b610a16838383611b7b565b505050565b6008546001600160a01b03163314610a4e5760405162461bcd60e51b8152600401610a4590612a9b565b60405180910390fd5b8051610a6190600d90602084019061239c565b5050565b6008546001600160a01b03163314610a8f5760405162461bcd60e51b8152600401610a4590612a9b565b6013805460ff1916911515919091179055565b600154600054036000190190565b610a16838383611bd7565b6008546001600160a01b03163314610ae55760405162461bcd60e51b8152600401610a4590612a9b565b60026009541415610b385760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a45565b60026009556000610b516008546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610b9b576040519150601f19603f3d011682016040523d82523d6000602084013e610ba0565b606091505b5050905080610bae57600080fd5b506001600955565b610a1683838360405180602001604052806000815250611482565b6008546001600160a01b03163314610bfb5760405162461bcd60e51b8152600401610a4590612a9b565b600f55565b6008546001600160a01b03163314610c2a5760405162461bcd60e51b8152600401610a4590612a9b565b8051610a6190600e90602084019061239c565b600d8054610c4a90612a60565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7690612a60565b8015610cc35780601f10610c9857610100808354040283529160200191610cc3565b820191906000526020600020905b815481529060010190602001808311610ca657829003601f168201915b505050505081565b80516060906000816001600160401b03811115610cea57610cea612532565b604051908082528060200260200182016040528015610d3557816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610d085790505b50905060005b828114610d8957610d64858281518110610d5757610d57612ad0565b60200260200101516114cc565b828281518110610d7657610d76612ad0565b6020908102919091010152600101610d3b565b509392505050565b600c8054610c4a90612a60565b6000610da982611dc4565b5192915050565b60006001600160a01b038216610dd9576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b6008546001600160a01b03163314610e285760405162461bcd60e51b8152600401610a4590612a9b565b610e326000611ee6565b565b6008546001600160a01b03163314610e5e5760405162461bcd60e51b8152600401610a4590612a9b565b6000610e68610aa2565b905060005b82518160ff161015610a1657610eb8838260ff1681518110610e9157610e91612ad0565b60200260200101518260ff1684610ea89190612afc565b610eb3906001612afc565b611f38565b80610ec281612b14565b915050610e6d565b6008546001600160a01b03163314610ef45760405162461bcd60e51b8152600401610a4590612a9b565b600a55565b6008546001600160a01b03163314610f235760405162461bcd60e51b8152600401610a4590612a9b565b8051610a6190600c90602084019061239c565b60606000806000610f4685610db0565b90506000816001600160401b03811115610f6257610f62612532565b604051908082528060200260200182016040528015610f8b578160200160208202803683370190505b509050610fb1604080516060810182526000808252602082018190529181019190915290565b60015b83861461107757600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff1615801592820192909252925061101a5761106f565b81516001600160a01b03161561102f57815194505b876001600160a01b0316856001600160a01b0316141561106f578083878060010198508151811061106257611062612ad0565b6020026020010181815250505b600101610fb4565b50909695505050505050565b6060600380546108cd90612a60565b60608183106110b457604051631960ccad60e11b815260040160405180910390fd5b6000805460018510156110c657600194505b808411156110d2578093505b60006110dd87610db0565b9050848610156110fc57858503818110156110f6578091505b50611100565b5060005b6000816001600160401b0381111561111a5761111a612532565b604051908082528060200260200182016040528015611143578160200160208202803683370190505b5090508161115657935061125192505050565b6000611161886114cc565b905060008160400151611172575080515b885b8881141580156111845750848714155b1561124557600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161580159282019290925293506111e85761123d565b82516001600160a01b0316156111fd57825191505b8a6001600160a01b0316826001600160a01b0316141561123d578084888060010199508151811061123057611230612ad0565b6020026020010181815250505b600101611174565b50505092835250909150505b9392505050565b8060008111801561126b57506011548111155b6112875760405162461bcd60e51b8152600401610a4590612b34565b60105481611293610aa2565b61129d9190612afc565b11156112bb5760405162461bcd60e51b8152600401610a4590612b62565b8180600f546112ca9190612b90565b34101561130f5760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610a45565b60135460ff16156113625760405162461bcd60e51b815260206004820152601760248201527f54686520636f6e747261637420697320706175736564210000000000000000006044820152606401610a45565b610a163384611f38565b6001600160a01b0382163314156113965760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600e8054610c4a90612a60565b6008546001600160a01b031633146114395760405162461bcd60e51b8152600401610a4590612a9b565b601155565b6008546001600160a01b031633146114685760405162461bcd60e51b8152600401610a4590612a9b565b601380549115156101000261ff0019909216919091179055565b61148d848484611bd7565b6001600160a01b0383163b156114c6576114a984848484611f52565b6114c6576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6040805160608082018352600080835260208084018290528385018290528451928301855281835282018190529281019290925290600183108061151257506000548310155b1561151d5792915050565b50600082815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16158015928201929092529061157d5792915050565b61125183611dc4565b606061159182611b42565b6115f55760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610a45565b60135462010000900460ff1661169757600e805461161290612a60565b80601f016020809104026020016040519081016040528092919081815260200182805461163e90612a60565b801561168b5780601f106116605761010080835404028352916020019161168b565b820191906000526020600020905b81548152906001019060200180831161166e57829003601f168201915b50505050509050919050565b60006116a161204a565b905060008151116116c15760405180602001604052806000815250611251565b806116cb84612059565b600d6040516020016116df93929190612baf565b6040516020818303038152906040529392505050565b6008546001600160a01b0316331461171f5760405162461bcd60e51b8152600401610a4590612a9b565b601255565b8260008111801561173757506011548111155b6117535760405162461bcd60e51b8152600401610a4590612b34565b6010548161175f610aa2565b6117699190612afc565b11156117875760405162461bcd60e51b8152600401610a4590612b62565b8380600f546117969190612b90565b3410156117db5760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742066756e64732160681b6044820152606401610a45565b601354610100900460ff1661183d5760405162461bcd60e51b815260206004820152602260248201527f5468652077686974656c6973742073616c65206973206e6f7420656e61626c65604482015261642160f01b6064820152608401610a45565b336000908152600b602052604090205460ff161561189d5760405162461bcd60e51b815260206004820152601860248201527f4164647265737320616c726561647920636c61696d65642100000000000000006044820152606401610a45565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061191785858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600a549150849050612156565b6119545760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642070726f6f662160901b6044820152606401610a45565b600061195f33610db0565b9050601254811061196f57600080fd5b336000818152600b60205260409020805460ff191660011790556119939088611f38565b50505050505050565b6008546001600160a01b031633146119c65760405162461bcd60e51b8152600401610a4590612a9b565b60138054911515620100000262ff000019909216919091179055565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b81600081118015611a2357506011548111155b611a3f5760405162461bcd60e51b8152600401610a4590612b34565b60105481611a4b610aa2565b611a559190612afc565b1115611a735760405162461bcd60e51b8152600401610a4590612b62565b6008546001600160a01b03163314611a9d5760405162461bcd60e51b8152600401610a4590612a9b565b610a168284611f38565b6008546001600160a01b03163314611ad15760405162461bcd60e51b8152600401610a4590612a9b565b6001600160a01b038116611b365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610a45565b611b3f81611ee6565b50565b600081600111158015611b56575060005482105b80156108b8575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611be282611dc4565b9050836001600160a01b031681600001516001600160a01b031614611c195760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611c375750611c3785336119e2565b80611c52575033611c4784610950565b6001600160a01b0316145b905080611c7257604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611c9957604051633a954ecd60e21b815260040160405180910390fd5b611ca560008487611b7b565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611d79576000548214611d7957805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b60408051606081018252600080825260208201819052918101919091528180600111611ecd57600054811015611ecd57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290611ecb5780516001600160a01b031615611e62579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215611ec6579392505050565b611e62565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610a6182826040518060200160405280600081525061216c565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611f87903390899088908890600401612c73565b602060405180830381600087803b158015611fa157600080fd5b505af1925050508015611fd1575060408051601f3d908101601f19168201909252611fce91810190612cb0565b60015b61202c573d808015611fff576040519150601f19603f3d011682016040523d82523d6000602084013e612004565b606091505b508051612024576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600c80546108cd90612a60565b60608161207d5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156120a7578061209181612ccd565b91506120a09050600a83612cfe565b9150612081565b6000816001600160401b038111156120c1576120c1612532565b6040519080825280601f01601f1916602001820160405280156120eb576020820181803683370190505b5090505b841561204257612100600183612d12565b915061210d600a86612d29565b612118906030612afc565b60f81b81838151811061212d5761212d612ad0565b60200101906001600160f81b031916908160001a90535061214f600a86612cfe565b94506120ef565b6000826121638584612330565b14949350505050565b6000546001600160a01b03841661219557604051622e076360e81b815260040160405180910390fd5b826121b35760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b156122db575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46122a46000878480600101955087611f52565b6122c1576040516368d2bf6b60e11b815260040160405180910390fd5b8082106122595782600054146122d657600080fd5b612320565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48082106122dc575b5060009081556114c69085838684565b600081815b8451811015610d8957600085828151811061235257612352612ad0565b602002602001015190508083116123785760008381526020829052604090209250612389565b600081815260208490526040902092505b508061239481612ccd565b915050612335565b8280546123a890612a60565b90600052602060002090601f0160209004810192826123ca5760008555612410565b82601f106123e357805160ff1916838001178555612410565b82800160010185558215612410579182015b828111156124105782518255916020019190600101906123f5565b5061241c929150612420565b5090565b5b8082111561241c5760008155600101612421565b6001600160e01b031981168114611b3f57600080fd5b60006020828403121561245d57600080fd5b813561125181612435565b60005b8381101561248357818101518382015260200161246b565b838111156114c65750506000910152565b600081518084526124ac816020860160208601612468565b601f01601f19169290920160200192915050565b6020815260006112516020830184612494565b6000602082840312156124e557600080fd5b5035919050565b80356001600160a01b038116811461250357600080fd5b919050565b6000806040838503121561251b57600080fd5b612524836124ec565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561257057612570612532565b604052919050565b60006001600160401b0383111561259157612591612532565b6125a4601f8401601f1916602001612548565b90508281528383830111156125b857600080fd5b828260208301376000602084830101529392505050565b6000602082840312156125e157600080fd5b81356001600160401b038111156125f757600080fd5b8201601f8101841361260857600080fd5b61204284823560208401612578565b8035801515811461250357600080fd5b60006020828403121561263957600080fd5b61125182612617565b60008060006060848603121561265757600080fd5b612660846124ec565b925061266e602085016124ec565b9150604084013590509250925092565b60006001600160401b0382111561269757612697612532565b5060051b60200190565b600060208083850312156126b457600080fd5b82356001600160401b038111156126ca57600080fd5b8301601f810185136126db57600080fd5b80356126ee6126e98261267e565b612548565b81815260059190911b8201830190838101908783111561270d57600080fd5b928401925b8284101561272b57833582529284019290840190612712565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156110775761278d83855180516001600160a01b031682526020808201516001600160401b0316908301526040908101511515910152565b9284019260609290920191600101612752565b6000602082840312156127b257600080fd5b611251826124ec565b600060208083850312156127ce57600080fd5b82356001600160401b038111156127e457600080fd5b8301601f810185136127f557600080fd5b80356128036126e98261267e565b81815260059190911b8201830190838101908783111561282257600080fd5b928401925b8284101561272b57612838846124ec565b82529284019290840190612827565b6020808252825182820181905260009190848201906040850190845b8181101561107757835183529284019291840191600101612863565b60008060006060848603121561289457600080fd5b61289d846124ec565b95602085013595506040909401359392505050565b600080604083850312156128c557600080fd5b6128ce836124ec565b91506128dc60208401612617565b90509250929050565b600080600080608085870312156128fb57600080fd5b612904856124ec565b9350612912602086016124ec565b92506040850135915060608501356001600160401b0381111561293457600080fd5b8501601f8101871361294557600080fd5b61295487823560208401612578565b91505092959194509250565b81516001600160a01b031681526020808301516001600160401b031690820152604080830151151590820152606081016108b8565b6000806000604084860312156129aa57600080fd5b8335925060208401356001600160401b03808211156129c857600080fd5b818601915086601f8301126129dc57600080fd5b8135818111156129eb57600080fd5b8760208260051b8501011115612a0057600080fd5b6020830194508093505050509250925092565b60008060408385031215612a2657600080fd5b612a2f836124ec565b91506128dc602084016124ec565b60008060408385031215612a5057600080fd5b823591506128dc602084016124ec565b600181811c90821680612a7457607f821691505b60208210811415612a9557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612b0f57612b0f612ae6565b500190565b600060ff821660ff811415612b2b57612b2b612ae6565b60010192915050565b602080825260149082015273496e76616c6964206d696e7420616d6f756e742160601b604082015260600190565b6020808252601490820152734d617820737570706c792065786365656465642160601b604082015260600190565b6000816000190483118215151615612baa57612baa612ae6565b500290565b600084516020612bc28285838a01612468565b855191840191612bd58184848a01612468565b8554920191600090600181811c9080831680612bf257607f831692505b858310811415612c1057634e487b7160e01b85526022600452602485fd5b808015612c245760018114612c3557612c62565b60ff19851688528388019550612c62565b60008b81526020902060005b85811015612c5a5781548a820152908401908801612c41565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612ca690830184612494565b9695505050505050565b600060208284031215612cc257600080fd5b815161125181612435565b6000600019821415612ce157612ce1612ae6565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082612d0d57612d0d612ce8565b500490565b600082821015612d2457612d24612ae6565b500390565b600082612d3857612d38612ce8565b50069056fea26469706673582212208c796b762d8c4bc75cbf8bcfef3f912f0b98da0f1884ec6e02733881ac06ef2864736f6c634300080900334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

export class YesMan__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YesMan> {
    return super.deploy(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    ) as Promise<YesMan>;
  }
  getDeployTransaction(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    );
  }
  attach(address: string): YesMan {
    return super.attach(address) as YesMan;
  }
  connect(signer: Signer): YesMan__factory {
    return super.connect(signer) as YesMan__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YesManInterface {
    return new utils.Interface(_abi) as YesManInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): YesMan {
    return new Contract(address, _abi, signerOrProvider) as YesMan;
  }
}
